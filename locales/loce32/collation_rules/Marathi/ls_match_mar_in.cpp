/*
* Copyright (c) 2009 Nokia Corporation and/or its subsidiary(-ies).
* All rights reserved.
* This component and the accompanying materials are made available
* under the terms of "Eclipse Public License v1.0"
* which accompanies this distribution, and is available
* at the URL "http://www.eclipse.org/legal/epl-v10.html".
*
* Initial Contributors:
* Nokia Corporation - initial contribution.
*
* Contributors:
*
* Description: 
*
*/


#include <kernel/ls_std.h>
#include <collate.h>

const TUint KUidMatch_mar_inCollationMethod = 0x100059DD;

static const TUint32 TheMatch_mar_inKey[] = 
	{
	0x101,0x6c5e609,0x6c6e609,0x6c7e609,0x6c8e609,0x6c9e609,0x6cae609,0x6cbe609,
	0x6cce609,0x6cde609,0x6cee609,0xba40109,0xba50109,0xba60109,0xba70109,0xba80109,
	0xba90109,0xbaa0109,0xbab0109,0xbac0109,0xbad0109,0xbaf0109,0xbb10109,0xbb20109,
	0xbb30109,0xbb40109,0xbb50109,0xbb60109,0xbb70109,0xbb80109,0xbb90109,0xbba0109,
	0xbbb0109,0xbbc0109,0xbbd0109,0xbbe0109,0xbbf0109,0xbc00109,0xbc10109,0xbc20109,
	0xbc30109,0xbc40109,0xbc50109,0xbc60109,0xbc70109,0xbc80109,0xbc90109,0xbca0109,
	0xbcb0109,0xbcc0109,0xbcd0109,0xbce0109,0xbcf0109,0xbd00109,0xbd10109,0xbd20109,
	0xbd30109,0xbd40109,0xbd50109,0xbd60109,0xbd70109,0xbd80109,0xbd90109,0xbda0109,
	0xb109,0xbdb0109,0xbdc0109,0xbdd0109,0xbde0109,0xbdf0109,0xbe00109,0xbe10109,
	0xbe20109,0xbe50109,0xbe60109,0xbe70109,0xbe80109,0xbe90109,0xbea0109,0xbeb0109,
	0xbec0109,0xbed0109,0xb209,0xb309,0xb409,0xb509,0xbae0109,0xbb00109,
	0xbe30109,0xbe40109,0x22a010b,0x22b010b,0x285010b,
	};

static const TUint32 TheMatch_mar_inIndex[] = 
	{
	0x300001,0x310002,0x320003,0x330004,0x340005,0x350006,0x360007,0x370008,
	0x380009,0x39000a,0x901000b,0x902000c,0x903000d,0x905000e,0x906000f,0x9070010,
	0x9080011,0x9090012,0x90a0013,0x90b0014,0x90c0015,0x90d0016,0x90e0017,0x90f0018,
	0x9100019,0x911001a,0x912001b,0x913001c,0x914001d,0x915001e,0x916001f,0x9170020,
	0x9180021,0x9190022,0x91a0023,0x91b0024,0x91c0025,0x91d0026,0x91e0027,0x91f0028,
	0x9200029,0x921002a,0x922002b,0x923002c,0x924002d,0x925002e,0x926002f,0x9270030,
	0x9280031,0x92a0032,0x92b0033,0x92c0034,0x92d0035,0x92e0036,0x92f0037,0x9300038,
	0x9320039,0x933003a,0x935003b,0x936003c,0x937003d,0x938003e,0x939003f,0x93c0040,
	0x93d0041,0x93e0042,0x93f0043,0x9400044,0x9410045,0x9420046,0x9430047,0x9440048,
	0x9450049,0x946004a,0x947004b,0x948004c,0x949004d,0x94a004e,0x94b004f,0x94c0050,
	0x94d0051,0x9500000,0x9510052,0x9520053,0x9530054,0x9540055,0x9600056,0x9610057,
	0x9620058,0x9630059,0x964005a,0x965005b,0x9660001,0x9670002,0x9680003,0x9690004,
	0x96a0005,0x96b0006,0x96c0007,0x96d0008,0x96e0009,0x96f000a,0x970005c,
	};

static const TCollationKeyTable TheMatch_mar_inTable = 
	{ TheMatch_mar_inKey, TheMatch_mar_inIndex, 103, 0, 0, 0 };

static const TCollationMethod TheCollationMethod[] = 
	{
		{
		KUidMatch_mar_inCollationMethod, // the method for the locale
		NULL, // use the standard table as the main table
		&TheMatch_mar_inTable, // the locale values override the standard values
		0 // the flags are standard
		},
		{
		KUidBasicCollationMethod, // the standard unlocalised method
		NULL, // null means use the standard table
		NULL, // there's no override table
		0 // the flags are standard
		}
	};

static const TCollationDataSet TheCollationDataSet =
	{
	TheCollationMethod,
	2
	};

// The one and only locale character set object.
const LCharSet TheCharSet =
	{
	NULL,
	&TheCollationDataSet
	};
